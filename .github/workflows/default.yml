---
# {{ metas -}}
# https://docs.github.com/en/actions
# https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows
# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions
# https://docs.github.com/en/actions/learn-github-actions/workflow-commands-for-github-actions
# https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
# https://docs.github.com/en/actions/learn-github-actions/expressions
# https://docs.github.com/en/actions/learn-github-actions/contexts
name : debug
permissions : "write-all"
on :
  workflow_dispatch : {}
  push :
    branches : [ "main" ]
    tags : [ "v[0-9]+.[0-9]+.[0-9]+" ]
  pull_request :
    types :
    - "opened"
    - "reopened"
    - "synchronize"

jobs :

  input :
    uses : "kuwas/.github/.github/workflows/input.yml@main"
    with :
      machine : "ubuntu-latest"
      default : "default"

  default :

    if : true
    needs : [ "input" ]
    continue-on-error : false
    timeout-minutes : 60

    runs-on : "${{ matrix.machine }}"
    # container : { image : "${{ matrix.container }}" }
    environment : default

    strategy :
      matrix :
        machine : [ "ubuntu-latest" ]
        container : [ "alpine:latest" ]
      max-parallel : 10
      fail-fast : true

    services :
      default :
        image : "nginx:alpine"
        ports : [ "8080:80" ]

    defaults :
      run :
        working-directory : "."
        shell : "bash"

    outputs :
      default : "${{ steps.default.outputs.default }}"

    steps :

    - name : checkout
      uses : "actions/checkout@v2"
    # - name : docker compose up
    #   run : "docker-compose up -d"

    - name : machine echo env
      env : { CONTENT : "${{ toJSON(env) }}" }
      run : "echo $CONTENT"
    - name : machine echo secrets
      env : { CONTENT : "${{ toJSON(secrets) }}" }
      run : "echo $CONTENT"
    - name : machine echo github
      env : { CONTENT : "${{ toJSON(github) }}" }
      run : "echo $CONTENT"
    - name : machine echo runner
      env : { CONTENT : "${{ toJSON(runner) }}" }
      run : "echo $CONTENT"
    - name : machine echo job
      env : { CONTENT : "${{ toJSON(job) }}" }
      run : "echo $CONTENT"
    - name : machine echo needs
      env : { CONTENT : "${{ toJSON(needs) }}" }
      run : "echo $CONTENT"
    - name : machine echo strategy
      env : { CONTENT : "${{ toJSON(strategy) }}" }
      run : "echo $CONTENT"
    - name : machine echo matrix
      env : { CONTENT : "${{ toJSON(matrix) }}" }
      run : "echo $CONTENT"
    - name : machine echo steps
      env : { CONTENT : "${{ toJSON(steps) }}" }
      run : "echo $CONTENT"

    - name : machine echo $GITHUB_SERVER_URL
      run : "echo $GITHUB_SERVER_URL"
    - name : machine echo $GITHUB_API_URL
      run : "echo $GITHUB_API_URL"
    - name : machine echo $GITHUB_GRAPHQL_URL
      run : "echo $GITHUB_GRAPHQL_URL"
    - name : machine echo $GITHUB_RUN_ID
      run : "echo $GITHUB_RUN_ID"
    - name : machine echo $GITHUB_RUN_NUMBER
      run : "echo $GITHUB_RUN_NUMBER"
    - name : machine echo $GITHUB_ACTIONS
      run : "echo $GITHUB_ACTIONS"
    - name : machine echo $GITHUB_WORKFLOW
      run : "echo $GITHUB_WORKFLOW"
    - name : machine echo $GITHUB_JOB
      run : "echo $GITHUB_JOB"
    - name : machine echo $GITHUB_ACTION
      run : "echo $GITHUB_ACTION"
    - name : machine echo $GITHUB_EVENT_NAME
      run : "echo $GITHUB_EVENT_NAME"
    - name : machine echo $GITHUB_ACTOR
      run : "echo $GITHUB_ACTOR"
    - name : machine echo $GITHUB_REPOSITORY
      run : "echo $GITHUB_REPOSITORY"
    - name : machine echo $GITHUB_BASE_REF
      run : "echo $GITHUB_BASE_REF"
    - name : machine echo $GITHUB_HEAD_REF
      run : "echo $GITHUB_HEAD_REF"
    - name : machine echo $GITHUB_REF
      run : "echo $GITHUB_REF"
    - name : machine echo $GITHUB_SHA
      run : "echo $GITHUB_SHA"
    - name : machine echo $GITHUB_EVENT_PATH
      run : "echo $GITHUB_EVENT_PATH"
    - name : machine echo $GITHUB_ACTION_PATH
      run : "echo $GITHUB_ACTION_PATH"
    - name : machine echo $GITHUB_WORKSPACE
      run : "echo $GITHUB_WORKSPACE"
    - name : machine echo $HOME
      run : "echo $HOME"

    - name : container ls $GITHUB_EVENT_PATH
      with : { entrypoint : "/bin/sh" , args : '-c "ls -la $GITHUB_EVENT_PATH"' }
      uses : "docker://alpine:latest"
    - name : container ls $GITHUB_ACTION_PATH
      with : { entrypoint : "/bin/sh" , args : '-c "ls -la $GITHUB_ACTION_PATH"' }
      uses : "docker://alpine:latest"
    - name : container ls $GITHUB_WORKSPACE
      with : { entrypoint : "/bin/sh" , args : '-c "ls -la $GITHUB_WORKSPACE"' }
      uses : "docker://alpine:latest"
    - name : container ls $HOME
      with : { entrypoint : "/bin/sh" , args : '-c "ls -la $HOME"' }
      uses : "docker://alpine:latest"

    - name : machine ls $GITHUB_EVENT_PATH
      run : "ls -la $GITHUB_EVENT_PATH"
    - name : machine ls $GITHUB_ACTION_PATH
      run : "ls -la $GITHUB_ACTION_PATH"
    - name : machine ls $GITHUB_WORKSPACE
      run : "ls -la $GITHUB_WORKSPACE"
    - name : machine ls $HOME
      run : "ls -la $HOME"

    - id : default
      name : output default
      run : 'echo "::set-output name=default::default"'
